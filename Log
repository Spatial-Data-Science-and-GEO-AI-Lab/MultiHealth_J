Week 19:
- Worked on it from wednesday afternoon due to personal issues monday and tuesday.
- Tried to get the amount of intersections per grid by getting a small street network per grid centroid and then extracting the right statistic. The code should now definitely work but it is still running after 16 hours.
- three-way intersections seemed to be false when calculated with 'basic_stats', but not with 'count_streets_per_node'.
- Worked on getting the population density per grid bufferzone.
- Also tried working on computational efficiency optimization, but to no avail. The 'multiprocessing' package does not work with Jupyter Notebook it seems, so I might have to use another IDE or something. 
I did read that putting operations in functions and applying the function the each row of the data with apply() works faster than looping through the dataset and doing operations on it that way, so I altered my code for the intersection extractions.
- Also helped Sander with code for the distance calculations.
- Will work on it this weekend to try and get more density statistics such as the intersection density per grid and possibly the street density.

Week 19 update (sunday):
- population density not working yet, getting negative sums of population per some bufferzones.
- got the three-way-intersections after 68 hours of execution time, intersection density working now too.
- street density almost done too, but they seem to be inflated when looking at the 'street_density_km' from ox.stats.basic_stats.

Week 20:
- Updated the construction of the population grid by implementing the right CRS and reprojecting the extracted GeoTIFF for the city_grids_format function. 
Updated the population density, but still getting some negative values due to no-data within buffers. Also updated the network density measures. 
Besides getting the right area of the network now, density values are still unrealistic.

Week 20 update (friday):
- Still having trouble removing the parts from the buffers that overlap with regions containing no population data.
- The other densities such as the intersection density and street density should be done this weekend.
- Also working on retrieving more distance variables this weekend.

Week 20 update (saturday):
- After hours of trying, nearest_node optimalisation done for distance calculations and for the truncation needed to get the street network.
I vectorized the code instead of using for-loop iterations. Speed is MUCH faster now.
- Worked on optimizing the retrieval of street networks via truncation, however, retrieval via truncation seems to be slower than retrieval via 
the 'ox.graph_from_point' function, no matter what I try.
- Will also enhance this log tomorrow to make it look better.

Week 20 update (sunday):
- Spent hours on vectorization optimalisation for distance calculations to for example bus stops. It is MUCH faster now. 100K rows in 26 mins on my crappy macbook.
- Truncation still not, will work on optimizing tomorrow again.



